%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.1.3
-module(game_type_pb).

-export([encode_msg/1, encode_msg/2]).
-export([decode_msg/2, decode_msg/3]).
-export([merge_msgs/2, merge_msgs/3]).
-export([verify_msg/1, verify_msg/2]).
-export([get_msg_defs/0]).
-export([get_msg_names/0]).
-export([get_group_names/0]).
-export([get_msg_or_group_names/0]).
-export([get_enum_names/0]).
-export([find_msg_def/1, fetch_msg_def/1]).
-export([find_enum_def/1, fetch_enum_def/1]).
-export([enum_symbol_by_value/2, enum_value_by_symbol/2]).
-export([enum_symbol_by_value_LogType/1, enum_value_by_symbol_LogType/1]).
-export([enum_symbol_by_value_GateType/1, enum_value_by_symbol_GateType/1]).
-export([enum_symbol_by_value_OutType/1, enum_value_by_symbol_OutType/1]).
-export([enum_symbol_by_value_PropType/1, enum_value_by_symbol_PropType/1]).
-export([enum_symbol_by_value_PayWay/1, enum_value_by_symbol_PayWay/1]).
-export([enum_symbol_by_value_ShopStatus/1, enum_value_by_symbol_ShopStatus/1]).
-export([enum_symbol_by_value_LoginPrizeType/1, enum_value_by_symbol_LoginPrizeType/1]).
-export([get_service_names/0]).
-export([get_service_def/1]).
-export([get_rpc_names/1]).
-export([find_rpc_def/2, fetch_rpc_def/2]).
-export([get_package_name/0]).
-export([gpb_version_as_string/0, gpb_version_as_list/0]).

-include("game_type_pb.hrl").
-include("gpb.hrl").

%% enumerated types
-type 'LogType'() :: 'LOG_TYPE0' | 'LOG_TYPE1' | 'LOG_TYPE2' | 'LOG_TYPE3' | 'LOG_TYPE4' | 'LOG_TYPE5'.
-type 'GateType'() :: 'GATE_TYPE0' | 'GATE_TYPE1' | 'GATE_TYPE2'.
-type 'OutType'() :: 'OUT_TYPE0' | 'OUT_TYPE1' | 'OUT_TYPE2'.
-type 'PropType'() :: 'PROP_TYPE0' | 'PROP_TYPE1' | 'PROP_TYPE2' | 'PROP_TYPE3' | 'PROP_TYPE4' | 'PROP_TYPE5' | 'PROP_TYPE6' | 'PROP_TYPE7' | 'PROP_TYPE8' | 'PROP_TYPE9' | 'PROP_TYPE10' | 'PROP_TYPE11' | 'PROP_TYPE12' | 'PROP_TYPE13' | 'PROP_TYPE14'.
-type 'PayWay'() :: 'PAY_WAY0' | 'PAY_WAY1' | 'PAY_WAY2'.
-type 'ShopStatus'() :: 'SHOP_STATUS0' | 'SHOP_STATUS1' | 'SHOP_STATUS2' | 'SHOP_STATUS3' | 'SHOP_STATUS4'.
-type 'LoginPrizeType'() :: 'LoginPrizeSelect' | 'LoginPrizeDraw'.
-export_type(['LogType'/0, 'GateType'/0, 'OutType'/0, 'PropType'/0, 'PayWay'/0, 'ShopStatus'/0, 'LoginPrizeType'/0]).

%% message types

-export_type([]).

-spec encode_msg(_) -> no_return().
encode_msg(Msg) -> encode_msg(Msg, []).


-spec encode_msg(_,_) -> no_return().
encode_msg(_Msg, _Opts) ->
    erlang:error({gpb_error, no_messages}).




-spec decode_msg(binary(), atom()) -> no_return().
decode_msg(Bin, _MsgName) when is_binary(Bin) ->
    erlang:error({gpb_error, no_messages}).

-spec decode_msg(binary(), atom(), list()) -> no_return().
decode_msg(Bin, _MsgName, _Opts) when is_binary(Bin) ->
    erlang:error({gpb_error, no_messages}).





-spec merge_msgs(_, _) -> no_return().
merge_msgs(Prev, New) -> merge_msgs(Prev, New, []).

-spec merge_msgs(_, _, _) -> no_return().
merge_msgs(_Prev, _New, _Opts) ->
    erlang:error({gpb_error, no_messages}).


-spec verify_msg(_) -> no_return().
verify_msg(Msg) -> verify_msg(Msg, []).

-spec verify_msg(_,_) -> no_return().
verify_msg(Msg, _Opts) ->
    mk_type_error(not_a_known_message, Msg, []).



-spec mk_type_error(_, _, list()) -> no_return().
mk_type_error(Error, ValueSeen, Path) ->
    Path2 = prettify_path(Path),
    erlang:error({gpb_type_error,
		  {Error, [{value, ValueSeen}, {path, Path2}]}}).


prettify_path([]) -> top_level.



get_msg_defs() ->
    [{{enum, 'LogType'},
      [{'LOG_TYPE0', 0}, {'LOG_TYPE1', 1}, {'LOG_TYPE2', 2},
       {'LOG_TYPE3', 3}, {'LOG_TYPE4', 4}, {'LOG_TYPE5', 5}]},
     {{enum, 'GateType'},
      [{'GATE_TYPE0', 0}, {'GATE_TYPE1', 1},
       {'GATE_TYPE2', 2}]},
     {{enum, 'OutType'},
      [{'OUT_TYPE0', 0}, {'OUT_TYPE1', 1}, {'OUT_TYPE2', 2}]},
     {{enum, 'PropType'},
      [{'PROP_TYPE0', 0}, {'PROP_TYPE1', 1},
       {'PROP_TYPE2', 2}, {'PROP_TYPE3', 3}, {'PROP_TYPE4', 4},
       {'PROP_TYPE5', 5}, {'PROP_TYPE6', 6}, {'PROP_TYPE7', 7},
       {'PROP_TYPE8', 8}, {'PROP_TYPE9', 9},
       {'PROP_TYPE10', 10}, {'PROP_TYPE11', 11},
       {'PROP_TYPE12', 12}, {'PROP_TYPE13', 13},
       {'PROP_TYPE14', 14}]},
     {{enum, 'PayWay'},
      [{'PAY_WAY0', 0}, {'PAY_WAY1', 1}, {'PAY_WAY2', 2}]},
     {{enum, 'ShopStatus'},
      [{'SHOP_STATUS0', 0}, {'SHOP_STATUS1', 1},
       {'SHOP_STATUS2', 2}, {'SHOP_STATUS3', 3},
       {'SHOP_STATUS4', 4}]},
     {{enum, 'LoginPrizeType'},
      [{'LoginPrizeSelect', 0}, {'LoginPrizeDraw', 1}]}].


get_msg_names() -> [].


get_group_names() -> [].


get_msg_or_group_names() -> [].


get_enum_names() ->
    ['LogType', 'GateType', 'OutType', 'PropType', 'PayWay',
     'ShopStatus', 'LoginPrizeType'].


-spec fetch_msg_def(_) -> no_return().
fetch_msg_def(MsgName) ->
    erlang:error({no_such_msg, MsgName}).


fetch_enum_def(EnumName) ->
    case find_enum_def(EnumName) of
      Es when is_list(Es) -> Es;
      error -> erlang:error({no_such_enum, EnumName})
    end.


find_msg_def(_) -> error.


find_enum_def('LogType') ->
    [{'LOG_TYPE0', 0}, {'LOG_TYPE1', 1}, {'LOG_TYPE2', 2},
     {'LOG_TYPE3', 3}, {'LOG_TYPE4', 4}, {'LOG_TYPE5', 5}];
find_enum_def('GateType') ->
    [{'GATE_TYPE0', 0}, {'GATE_TYPE1', 1},
     {'GATE_TYPE2', 2}];
find_enum_def('OutType') ->
    [{'OUT_TYPE0', 0}, {'OUT_TYPE1', 1}, {'OUT_TYPE2', 2}];
find_enum_def('PropType') ->
    [{'PROP_TYPE0', 0}, {'PROP_TYPE1', 1},
     {'PROP_TYPE2', 2}, {'PROP_TYPE3', 3}, {'PROP_TYPE4', 4},
     {'PROP_TYPE5', 5}, {'PROP_TYPE6', 6}, {'PROP_TYPE7', 7},
     {'PROP_TYPE8', 8}, {'PROP_TYPE9', 9},
     {'PROP_TYPE10', 10}, {'PROP_TYPE11', 11},
     {'PROP_TYPE12', 12}, {'PROP_TYPE13', 13},
     {'PROP_TYPE14', 14}];
find_enum_def('PayWay') ->
    [{'PAY_WAY0', 0}, {'PAY_WAY1', 1}, {'PAY_WAY2', 2}];
find_enum_def('ShopStatus') ->
    [{'SHOP_STATUS0', 0}, {'SHOP_STATUS1', 1},
     {'SHOP_STATUS2', 2}, {'SHOP_STATUS3', 3},
     {'SHOP_STATUS4', 4}];
find_enum_def('LoginPrizeType') ->
    [{'LoginPrizeSelect', 0}, {'LoginPrizeDraw', 1}];
find_enum_def(_) -> error.


enum_symbol_by_value('LogType', Value) ->
    enum_symbol_by_value_LogType(Value);
enum_symbol_by_value('GateType', Value) ->
    enum_symbol_by_value_GateType(Value);
enum_symbol_by_value('OutType', Value) ->
    enum_symbol_by_value_OutType(Value);
enum_symbol_by_value('PropType', Value) ->
    enum_symbol_by_value_PropType(Value);
enum_symbol_by_value('PayWay', Value) ->
    enum_symbol_by_value_PayWay(Value);
enum_symbol_by_value('ShopStatus', Value) ->
    enum_symbol_by_value_ShopStatus(Value);
enum_symbol_by_value('LoginPrizeType', Value) ->
    enum_symbol_by_value_LoginPrizeType(Value).


enum_value_by_symbol('LogType', Sym) ->
    enum_value_by_symbol_LogType(Sym);
enum_value_by_symbol('GateType', Sym) ->
    enum_value_by_symbol_GateType(Sym);
enum_value_by_symbol('OutType', Sym) ->
    enum_value_by_symbol_OutType(Sym);
enum_value_by_symbol('PropType', Sym) ->
    enum_value_by_symbol_PropType(Sym);
enum_value_by_symbol('PayWay', Sym) ->
    enum_value_by_symbol_PayWay(Sym);
enum_value_by_symbol('ShopStatus', Sym) ->
    enum_value_by_symbol_ShopStatus(Sym);
enum_value_by_symbol('LoginPrizeType', Sym) ->
    enum_value_by_symbol_LoginPrizeType(Sym).


enum_symbol_by_value_LogType(0) -> 'LOG_TYPE0';
enum_symbol_by_value_LogType(1) -> 'LOG_TYPE1';
enum_symbol_by_value_LogType(2) -> 'LOG_TYPE2';
enum_symbol_by_value_LogType(3) -> 'LOG_TYPE3';
enum_symbol_by_value_LogType(4) -> 'LOG_TYPE4';
enum_symbol_by_value_LogType(5) -> 'LOG_TYPE5'.


enum_value_by_symbol_LogType('LOG_TYPE0') -> 0;
enum_value_by_symbol_LogType('LOG_TYPE1') -> 1;
enum_value_by_symbol_LogType('LOG_TYPE2') -> 2;
enum_value_by_symbol_LogType('LOG_TYPE3') -> 3;
enum_value_by_symbol_LogType('LOG_TYPE4') -> 4;
enum_value_by_symbol_LogType('LOG_TYPE5') -> 5.

enum_symbol_by_value_GateType(0) -> 'GATE_TYPE0';
enum_symbol_by_value_GateType(1) -> 'GATE_TYPE1';
enum_symbol_by_value_GateType(2) -> 'GATE_TYPE2'.


enum_value_by_symbol_GateType('GATE_TYPE0') -> 0;
enum_value_by_symbol_GateType('GATE_TYPE1') -> 1;
enum_value_by_symbol_GateType('GATE_TYPE2') -> 2.

enum_symbol_by_value_OutType(0) -> 'OUT_TYPE0';
enum_symbol_by_value_OutType(1) -> 'OUT_TYPE1';
enum_symbol_by_value_OutType(2) -> 'OUT_TYPE2'.


enum_value_by_symbol_OutType('OUT_TYPE0') -> 0;
enum_value_by_symbol_OutType('OUT_TYPE1') -> 1;
enum_value_by_symbol_OutType('OUT_TYPE2') -> 2.

enum_symbol_by_value_PropType(0) -> 'PROP_TYPE0';
enum_symbol_by_value_PropType(1) -> 'PROP_TYPE1';
enum_symbol_by_value_PropType(2) -> 'PROP_TYPE2';
enum_symbol_by_value_PropType(3) -> 'PROP_TYPE3';
enum_symbol_by_value_PropType(4) -> 'PROP_TYPE4';
enum_symbol_by_value_PropType(5) -> 'PROP_TYPE5';
enum_symbol_by_value_PropType(6) -> 'PROP_TYPE6';
enum_symbol_by_value_PropType(7) -> 'PROP_TYPE7';
enum_symbol_by_value_PropType(8) -> 'PROP_TYPE8';
enum_symbol_by_value_PropType(9) -> 'PROP_TYPE9';
enum_symbol_by_value_PropType(10) -> 'PROP_TYPE10';
enum_symbol_by_value_PropType(11) -> 'PROP_TYPE11';
enum_symbol_by_value_PropType(12) -> 'PROP_TYPE12';
enum_symbol_by_value_PropType(13) -> 'PROP_TYPE13';
enum_symbol_by_value_PropType(14) -> 'PROP_TYPE14'.


enum_value_by_symbol_PropType('PROP_TYPE0') -> 0;
enum_value_by_symbol_PropType('PROP_TYPE1') -> 1;
enum_value_by_symbol_PropType('PROP_TYPE2') -> 2;
enum_value_by_symbol_PropType('PROP_TYPE3') -> 3;
enum_value_by_symbol_PropType('PROP_TYPE4') -> 4;
enum_value_by_symbol_PropType('PROP_TYPE5') -> 5;
enum_value_by_symbol_PropType('PROP_TYPE6') -> 6;
enum_value_by_symbol_PropType('PROP_TYPE7') -> 7;
enum_value_by_symbol_PropType('PROP_TYPE8') -> 8;
enum_value_by_symbol_PropType('PROP_TYPE9') -> 9;
enum_value_by_symbol_PropType('PROP_TYPE10') -> 10;
enum_value_by_symbol_PropType('PROP_TYPE11') -> 11;
enum_value_by_symbol_PropType('PROP_TYPE12') -> 12;
enum_value_by_symbol_PropType('PROP_TYPE13') -> 13;
enum_value_by_symbol_PropType('PROP_TYPE14') -> 14.

enum_symbol_by_value_PayWay(0) -> 'PAY_WAY0';
enum_symbol_by_value_PayWay(1) -> 'PAY_WAY1';
enum_symbol_by_value_PayWay(2) -> 'PAY_WAY2'.


enum_value_by_symbol_PayWay('PAY_WAY0') -> 0;
enum_value_by_symbol_PayWay('PAY_WAY1') -> 1;
enum_value_by_symbol_PayWay('PAY_WAY2') -> 2.

enum_symbol_by_value_ShopStatus(0) -> 'SHOP_STATUS0';
enum_symbol_by_value_ShopStatus(1) -> 'SHOP_STATUS1';
enum_symbol_by_value_ShopStatus(2) -> 'SHOP_STATUS2';
enum_symbol_by_value_ShopStatus(3) -> 'SHOP_STATUS3';
enum_symbol_by_value_ShopStatus(4) -> 'SHOP_STATUS4'.


enum_value_by_symbol_ShopStatus('SHOP_STATUS0') -> 0;
enum_value_by_symbol_ShopStatus('SHOP_STATUS1') -> 1;
enum_value_by_symbol_ShopStatus('SHOP_STATUS2') -> 2;
enum_value_by_symbol_ShopStatus('SHOP_STATUS3') -> 3;
enum_value_by_symbol_ShopStatus('SHOP_STATUS4') -> 4.

enum_symbol_by_value_LoginPrizeType(0) ->
    'LoginPrizeSelect';
enum_symbol_by_value_LoginPrizeType(1) ->
    'LoginPrizeDraw'.


enum_value_by_symbol_LoginPrizeType('LoginPrizeSelect') ->
    0;
enum_value_by_symbol_LoginPrizeType('LoginPrizeDraw') ->
    1.


get_service_names() -> [].


get_service_def(_) -> error.


get_rpc_names(_) -> error.


find_rpc_def(_, _) -> error.



-spec fetch_rpc_def(_, _) -> no_return().
fetch_rpc_def(ServiceName, RpcName) ->
    erlang:error({no_such_rpc, ServiceName, RpcName}).


get_package_name() -> pb.



gpb_version_as_string() ->
    "4.1.3".

gpb_version_as_list() ->
    [4,1,3].
